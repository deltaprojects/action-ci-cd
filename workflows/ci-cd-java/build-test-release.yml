on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - 'docs/**'
      - '**/README.md'
      - '**/LICENSE'
      - '**/.gitignore'
    tags:
      - "*"
  pull_request:
    branches:
      - main
      - master
    paths-ignore:
      - 'docs/**'
      - '**/README.md'
      - '**/LICENSE'
      - '**/.gitignore'

jobs:
  build-test-release:
    name: Build, test and release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Test
        run: mvn -s .github/maven-settings.xml --batch-mode --update-snapshots --activate-profiles ci verify
        env:
          MAVEN_USERNAME: ${{ secrets.MVN_MIRROR_USER }}
          MAVEN_PASSWORD: ${{ secrets.MVN_MIRROR_PASSWORD }}
          MVN_REPOSITORY_USERNAME: ${{ secrets.MVN_REPOSITORY_USERNAME }}
          MVN_REPOSITORY_PASSWORD: ${{ secrets.MVN_REPOSITORY_TOKEN }}

      - name: Prepare release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF_NAME##*-}" >> $GITHUB_ENV
          echo "RELEASE_MODULE=${GITHUB_REF_NAME%-*}" >> $GITHUB_ENV

      - name: Login to Docker registry
        if: env.RELEASE_VERSION != ''
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          registry: ghcr.io/${{ github.repository_owner }}

      - name: Release
        if: env.RELEASE_VERSION != ''
        run: |
          export RELEASE_VERSION=${{ env.RELEASE_VERSION }}
          export RELEASE_MODULE=${{ env.RELEASE_MODULE }}
          bash .github/perform-release.sh
        env:
          MAVEN_USERNAME: ${{ secrets.MVN_MIRROR_USER }}
          MAVEN_PASSWORD: ${{ secrets.MVN_MIRROR_PASSWORD }}
          MVN_REPOSITORY_USERNAME: ${{ secrets.MVN_REPOSITORY_USERNAME }}
          MVN_REPOSITORY_PASSWORD: ${{ secrets.MVN_REPOSITORY_TOKEN }}
